services:
  grafana:
    image: grafana/grafana-oss:${GRAFANA_TAG}
    user: root
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - SERVICE_URL_GRAFANA_3000
      - GF_SERVER_ROOT_URL=${SERVICE_URL_GRAFANA}
      - GF_SERVER_DOMAIN=${SERVICE_URL_GRAFANA}
      - GF_SECURITY_ADMIN_PASSWORD=${SERVICE_PASSWORD_GRAFANA}
      - GRAFANA_TAG=${GRAFANA_TAG:-12.1.0}
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://127.0.0.1:3000/api/health'
      interval: 5s
      timeout: 20s
      retries: 10
    depends_on:
      prometheus:
        condition: service_healthy
    entrypoint:
      - /bin/sh
      - -c
      - |
        mkdir -p /var/lib/grafana/dashboards

        cat <<'EOFF' >/tmp/insert_datasource
        #!/usr/bin/env bash
        set -euo pipefail
        DS_NAME="$$1"
        awk -v name="$$DS_NAME" '
          BEGIN { inserted = 0; seen_templating = 0 }
          /"templating"[[:space:]]*:[[:space:]]*\{/ {
            seen_templating = 1
          }
          /"list"[[:space:]]*:[[:space:]]*\[/ && seen_templating && !inserted {
            safe = name
            gsub(/\\/, "\\\\", safe)
            gsub(/"/, "\\\"", safe)
            print
            print "      {"
            print "        \"name\": \"" safe "\","
            print "        \"label\": \"Datasource\","
            print "        \"type\": \"datasource\","
            print "        \"query\": \"prometheus\","
            print "        \"refresh\": 1,"
            print "        \"includeAll\": false,"
            print "        \"current\": {}"
            print "      },"
            inserted = 1
            seen_templating = 0
            next
          }
          { print }
        ' -
        EOFF
        chmod +x /tmp/insert_datasource

        cat <<'EOFF' >/tmp/modify_title
        #!/usr/bin/env bash
        set -euo pipefail
        NEW_TITLE="$$1"
        awk -v new_title="$$NEW_TITLE" '
          {
            lines[NR] = $$0
          }
          END {
            safe = new_title
            gsub(/\\/, "\\\\", safe)
            gsub(/"/, "\\\"", safe)
            last_title = 0
            for (i = 1; i <= NR; i++) {
              if (lines[i] ~ /"title"[[:space:]]*:/) {
                last_title = i
              }
            }
            for (i = 1; i <= NR; i++) {
              if (i == last_title) {
                print "  \"title\": \"" safe "\","
              } else {
                print lines[i]
              }
            }
          }
        ' -
        EOFF
        chmod +x /tmp/modify_title

        cat <<EOF >/etc/grafana/provisioning/datasources/default.yaml
        apiVersion: 1
        datasources:
        - name: DS_PROMETHEUS
          type: prometheus
          access: proxy
          url: http://prometheus:9090
          isDefault: true
        EOF

        cat <<EOF >/etc/grafana/provisioning/dashboards/default.yaml
        apiVersion: 1
        providers:
          - name: Main Provider
            folder: ""
            type: file
            options:
              path:
                /var/lib/grafana/dashboards
        EOF

        curl -sL https://grafana.com/api/dashboards/1860/revisions/41/download |
        /tmp/modify_title "Host" >/var/lib/grafana/dashboards/node-exporter-full.json

        curl -sL https://grafana.com/api/dashboards/14282/revisions/1/download |
        /tmp/modify_title "Containers" |
        /tmp/insert_datasource DS_PROMETHEUS >/var/lib/grafana/dashboards/cadvisor-exporter-full.json

        curl -sL https://grafana.com/api/dashboards/10176/revisions/3/download |
        /tmp/modify_title "PiHole" |
        /tmp/insert_datasource DS_PROMETHEUS >/var/lib/grafana/dashboards/pihole-exporter.json

        curl -sL https://grafana.com/api/dashboards/18038/revisions/1/download |
        /tmp/modify_title "Music" |
        /tmp/insert_datasource DS_VICTORIAMETRICS >/var/lib/grafana/dashboards/navidrome.json

        curl -sL https://grafana.com/api/dashboards/12250/revisions/1/download |
        /tmp/modify_title "Traefik" |
        /tmp/insert_datasource DS_TRAEFIK >/var/lib/grafana/dashboards/traefik-2-2.json

        /run.sh

  prometheus:
    image: prom/prometheus:latest
    user: root
    volumes:
      - prometheus-data:/prometheus
    healthcheck:
      test:
        - CMD
        - wget
        - '--spider'
        - '-qO-'
        - 'http://localhost:9090'
      interval: 5s
      timeout: 20s
      retries: 20
    depends_on:
      - node_exporter
      - cadvisor
      - pihole_exporter
    environment:
      - SERVICE_URL_DDGRAFANA_9090
      - PROMETHEUS_CONF_TRAEFIK_DOMAIN=${PROMETHEUS_CONF_TRAEFIK_DOMAIN}
      - PROMETHEUS_CONF_TRAEFIK_USER=${PROMETHEUS_CONF_TRAEFIK_USER}
      - PROMETHEUS_CONF_TRAEFIK_PASS=${PROMETHEUS_CONF_TRAEFIK_PASS}
      - PROMETHEUS_CONF_TRAEFIK_METRICS_PATH=${PROMETHEUS_CONF_TRAEFIK_METRICS_PATH:-/metrics}
      - PROMETHEUS_CONF_NAVIDROME_DOMAIN=${PROMETHEUS_CONF_NAVIDROME_DOMAIN}
      - PROMETHEUS_CONF_NAVIDROME_METRICS_PATH=${PROMETHEUS_CONF_NAVIDROME_METRICS_PATH}
    labels:
      - traefik.http.middlewares.authelia@file
    entrypoint:
      - /bin/sh
      - -c
      - |
        cat <<EOF > /prometheus/conf.yaml
        global:
          scrape_interval: 15s

        scrape_configs:
          - job_name: 'prometheus'
            scrape_interval: 5s
            static_configs:
              - targets: ['localhost:9090']

          - job_name: 'node_exporter'
            static_configs:
              - targets: ['node_exporter:9100']

          - job_name: 'cadvisor'
            static_configs:
              - targets: ['cadvisor:8080']

          - job_name: 'pihole'
            static_configs:
              - targets: ['pihole_exporter:9617']

          - job_name: 'navidrome'
            metrics_path: ${PROMETHEUS_CONF_NAVIDROME_METRICS_PATH}
            static_configs:
              - targets:
                  - ${PROMETHEUS_CONF_NAVIDROME_DOMAIN}

          - job_name: 'traefik'
            metrics_path: ${PROMETHEUS_CONF_TRAEFIK_METRICS_PATH}
            basic_auth:
              username: '${PROMETHEUS_CONF_TRAEFIK_USER}'
              password: '${PROMETHEUS_CONF_TRAEFIK_PASS}'
            static_configs:
              - targets:
                  - ${PROMETHEUS_CONF_TRAEFIK_DOMAIN}
        EOF

        /bin/prometheus --config.file=/prometheus/conf.yaml

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    command:
      - '--path.rootfs=/host'
    pid: host
    volumes:
      - '/:/host:ro,rslave'

  cadvisor:
    image: zcube/cadvisor:latest
    privileged: true
    command:
      - '--docker_only=true'
      - '--housekeeping_interval=30s'
      - '--disable_metrics=accelerator,cpu_topology,disk,memory_numa,tcp,udp,percpu,sched,process,hugetlb,referenced_memory,resctrl,cpuset,advtcp'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg

  pihole_exporter:
    image: ekofr/pihole-exporter:latest
    environment:
      - PIHOLE_PROTOCOL=https
      - PIHOLE_PORT=443
      - SKIP_TLS_VERIFICATION=1
      - PIHOLE_HOSTNAME=${PIHOLE_HOSTNAME}
      - PIHOLE_PASSWORD=${PIHOLE_PASSWORD}
      - PORT=9617
      - DEBUG=1
